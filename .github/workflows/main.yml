name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # Enforce versions in case requirements.txt is missing/misaligned
          pip install "Flask==2.2.3" "Werkzeug==2.2.3" "pytest==8.4.2"

      - name: Run tests with pytest
        run: pytest test.py

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build, tag, and push image
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          IMAGE_NAME: my-image
        run: |
          # Use commit SHA, branch name, and latest tags
          COMMIT_TAG=${{ github.sha }}
          BRANCH_NAME=${GITHUB_REF_NAME}   # e.g. main, dev, feature-x

          # Build image with commit SHA
          docker build -t $DOCKERHUB_USERNAME/$IMAGE_NAME:$COMMIT_TAG .

          # Push commit SHA
          docker push $DOCKERHUB_USERNAME/$IMAGE_NAME:$COMMIT_TAG

          # Tag and push with branch name
          docker tag $DOCKERHUB_USERNAME/$IMAGE_NAME:$COMMIT_TAG $DOCKERHUB_USERNAME/$IMAGE_NAME:$BRANCH_NAME
          docker push $DOCKERHUB_USERNAME/$IMAGE_NAME:$BRANCH_NAME

          # Tag and push as latest (only if main branch)
          if [ "$BRANCH_NAME" = "main" ]; then
            docker tag $DOCKERHUB_USERNAME/$IMAGE_NAME:$COMMIT_TAG $DOCKERHUB_USERNAME/$IMAGE_NAME:latest
            docker push $DOCKERHUB_USERNAME/$IMAGE_NAME:latest
          fi
